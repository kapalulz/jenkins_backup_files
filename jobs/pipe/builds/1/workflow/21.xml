<?xml version='1.1' encoding='UTF-8'?>
<Tag plugin="workflow-support@839.v35e2736cfd5c">
  <node class="cps.n.StepEndNode" plugin="workflow-cps@3565.v4b_d9b_8c29a_b_3">
    <parentIds>
      <string>20</string>
    </parentIds>
    <id>21</id>
    <startId>18</startId>
  </node>
  <actions>
    <wf.a.TimingAction plugin="workflow-api@1200.v8005c684b_a_c6">
      <startTime>1671015479280</startTime>
    </wf.a.TimingAction>
    <wf.a.ErrorAction plugin="workflow-api@1200.v8005c684b_a_c6">
      <error class="java.lang.ExceptionInInitializerError">
        <stackTrace>
          <trace>java.base/java.time.ZoneRegion.ofId(ZoneRegion.java:120)</trace>
          <trace>java.base/java.time.ZoneId.of(ZoneId.java:408)</trace>
          <trace>java.base/java.time.ZoneId.of(ZoneId.java:356)</trace>
          <trace>java.base/java.time.ZoneId.of(ZoneId.java:312)</trace>
          <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:573)</trace>
          <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
          <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:562)</trace>
          <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
          <trace>java.base/java.time.ZoneId.systemDefault(ZoneId.java:272)</trace>
          <trace>org.eclipse.jgit.internal.storage.file.FileSnapshot.&lt;clinit&gt;(FileSnapshot.java:66)</trace>
          <trace>org.eclipse.jgit.storage.file.FileBasedConfig.&lt;init&gt;(FileBasedConfig.java:88)</trace>
          <trace>org.eclipse.jgit.util.SystemReader$Default.openJGitConfig(SystemReader.java:132)</trace>
          <trace>org.eclipse.jgit.util.SystemReader.getJGitConfig(SystemReader.java:338)</trace>
          <trace>org.eclipse.jgit.util.SystemReader.getSystemConfig(SystemReader.java:363)</trace>
          <trace>org.eclipse.jgit.util.SystemReader.getUserConfig(SystemReader.java:311)</trace>
          <trace>org.eclipse.jgit.internal.storage.file.FileRepository.&lt;init&gt;(FileRepository.java:161)</trace>
          <trace>org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:625)</trace>
          <trace>org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getRepository(CliGitAPIImpl.java:3475)</trace>
          <trace>hudson.plugins.git.GitAPI.getRepository(GitAPI.java:288)</trace>
          <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:97)</trace>
          <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:91)</trace>
          <trace>hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1236)</trace>
          <trace>hudson.plugins.git.GitSCM.checkout(GitSCM.java:1308)</trace>
          <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:129)</trace>
          <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:97)</trace>
          <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:84)</trace>
          <trace>org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47)</trace>
          <trace>java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)</trace>
          <trace>java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)</trace>
          <trace>java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)</trace>
          <trace>java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)</trace>
          <trace>java.base/java.lang.Thread.run(Thread.java:829)</trace>
        </stackTrace>
        <suppressedExceptions class="empty-list"/>
        <exception class="java.time.zone.ZoneRulesException">
          <detailMessage>Unable to load TZDB time-zone rules</detailMessage>
          <cause class="java.io.FileNotFoundException">
            <detailMessage>/usr/lib/jvm/java-11-openjdk-amd64/lib/tzdb.dat (No such file or directory)</detailMessage>
            <stackTrace>
              <trace>java.base/java.io.FileInputStream.open0(Native Method)</trace>
              <trace>java.base/java.io.FileInputStream.open(FileInputStream.java:219)</trace>
              <trace>java.base/java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:157)</trace>
              <trace>java.base/java.time.zone.TzdbZoneRulesProvider.&lt;init&gt;(TzdbZoneRulesProvider.java:110)</trace>
              <trace>java.base/java.time.zone.ZoneRulesProvider$1.run(ZoneRulesProvider.java:164)</trace>
              <trace>java.base/java.security.AccessController.doPrivileged(Native Method)</trace>
              <trace>java.base/java.time.zone.ZoneRulesProvider.&lt;clinit&gt;(ZoneRulesProvider.java:150)</trace>
              <trace>java.base/java.time.ZoneRegion.ofId(ZoneRegion.java:120)</trace>
              <trace>java.base/java.time.ZoneId.of(ZoneId.java:408)</trace>
              <trace>java.base/java.time.ZoneId.of(ZoneId.java:356)</trace>
              <trace>java.base/java.time.ZoneId.of(ZoneId.java:312)</trace>
              <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:573)</trace>
              <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
              <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:562)</trace>
              <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
              <trace>java.base/java.time.ZoneId.systemDefault(ZoneId.java:272)</trace>
              <trace>org.eclipse.jgit.internal.storage.file.FileSnapshot.&lt;clinit&gt;(FileSnapshot.java:66)</trace>
              <trace>org.eclipse.jgit.storage.file.FileBasedConfig.&lt;init&gt;(FileBasedConfig.java:88)</trace>
              <trace>org.eclipse.jgit.util.SystemReader$Default.openJGitConfig(SystemReader.java:132)</trace>
              <trace>org.eclipse.jgit.util.SystemReader.getJGitConfig(SystemReader.java:338)</trace>
              <trace>org.eclipse.jgit.util.SystemReader.getSystemConfig(SystemReader.java:363)</trace>
              <trace>org.eclipse.jgit.util.SystemReader.getUserConfig(SystemReader.java:311)</trace>
              <trace>org.eclipse.jgit.internal.storage.file.FileRepository.&lt;init&gt;(FileRepository.java:161)</trace>
              <trace>org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:625)</trace>
              <trace>org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getRepository(CliGitAPIImpl.java:3475)</trace>
              <trace>hudson.plugins.git.GitAPI.getRepository(GitAPI.java:288)</trace>
              <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:97)</trace>
              <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:91)</trace>
              <trace>hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1236)</trace>
              <trace>hudson.plugins.git.GitSCM.checkout(GitSCM.java:1308)</trace>
              <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:129)</trace>
              <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:97)</trace>
              <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:84)</trace>
              <trace>org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47)</trace>
              <trace>java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)</trace>
              <trace>java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)</trace>
              <trace>java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)</trace>
              <trace>java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)</trace>
              <trace>java.base/java.lang.Thread.run(Thread.java:829)</trace>
            </stackTrace>
            <suppressedExceptions class="empty-list"/>
          </cause>
          <stackTrace>
            <trace>java.base/java.time.zone.TzdbZoneRulesProvider.&lt;init&gt;(TzdbZoneRulesProvider.java:116)</trace>
            <trace>java.base/java.time.zone.ZoneRulesProvider$1.run(ZoneRulesProvider.java:164)</trace>
            <trace>java.base/java.security.AccessController.doPrivileged(Native Method)</trace>
            <trace>java.base/java.time.zone.ZoneRulesProvider.&lt;clinit&gt;(ZoneRulesProvider.java:150)</trace>
            <trace>java.base/java.time.ZoneRegion.ofId(ZoneRegion.java:120)</trace>
            <trace>java.base/java.time.ZoneId.of(ZoneId.java:408)</trace>
            <trace>java.base/java.time.ZoneId.of(ZoneId.java:356)</trace>
            <trace>java.base/java.time.ZoneId.of(ZoneId.java:312)</trace>
            <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:573)</trace>
            <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
            <trace>java.base/java.util.TimeZone.toZoneId0(TimeZone.java:562)</trace>
            <trace>java.base/java.util.TimeZone.toZoneId(TimeZone.java:550)</trace>
            <trace>java.base/java.time.ZoneId.systemDefault(ZoneId.java:272)</trace>
            <trace>org.eclipse.jgit.internal.storage.file.FileSnapshot.&lt;clinit&gt;(FileSnapshot.java:66)</trace>
            <trace>org.eclipse.jgit.storage.file.FileBasedConfig.&lt;init&gt;(FileBasedConfig.java:88)</trace>
            <trace>org.eclipse.jgit.util.SystemReader$Default.openJGitConfig(SystemReader.java:132)</trace>
            <trace>org.eclipse.jgit.util.SystemReader.getJGitConfig(SystemReader.java:338)</trace>
            <trace>org.eclipse.jgit.util.SystemReader.getSystemConfig(SystemReader.java:363)</trace>
            <trace>org.eclipse.jgit.util.SystemReader.getUserConfig(SystemReader.java:311)</trace>
            <trace>org.eclipse.jgit.internal.storage.file.FileRepository.&lt;init&gt;(FileRepository.java:161)</trace>
            <trace>org.eclipse.jgit.lib.BaseRepositoryBuilder.build(BaseRepositoryBuilder.java:625)</trace>
            <trace>org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getRepository(CliGitAPIImpl.java:3475)</trace>
            <trace>hudson.plugins.git.GitAPI.getRepository(GitAPI.java:288)</trace>
            <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:97)</trace>
            <trace>jenkins.plugins.git.GitHooksConfiguration.configure(GitHooksConfiguration.java:91)</trace>
            <trace>hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1236)</trace>
            <trace>hudson.plugins.git.GitSCM.checkout(GitSCM.java:1308)</trace>
            <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep.checkout(SCMStep.java:129)</trace>
            <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:97)</trace>
            <trace>org.jenkinsci.plugins.workflow.steps.scm.SCMStep$StepExecutionImpl.run(SCMStep.java:84)</trace>
            <trace>org.jenkinsci.plugins.workflow.steps.SynchronousNonBlockingStepExecution.lambda$start$0(SynchronousNonBlockingStepExecution.java:47)</trace>
            <trace>java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)</trace>
            <trace>java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)</trace>
            <trace>java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)</trace>
            <trace>java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)</trace>
            <trace>java.base/java.lang.Thread.run(Thread.java:829)</trace>
          </stackTrace>
          <suppressedExceptions class="empty-list"/>
        </exception>
      </error>
    </wf.a.ErrorAction>
  </actions>
</Tag>